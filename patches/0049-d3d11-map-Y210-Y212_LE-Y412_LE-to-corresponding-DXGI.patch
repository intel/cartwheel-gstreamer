From 2fe9ff9113d1630a165764e27b54e61f0380b691 Mon Sep 17 00:00:00 2001
From: Tong Wu <tong1.wu@intel.com>
Date: Wed, 28 Dec 2022 10:11:51 +0800
Subject: [PATCH] d3d11: map Y210 Y212_LE Y412_LE to corresponding DXGI formats

map GST_VIDEO_FORMAT_Y210 to DXGI_FORMAT_Y210,
GST_VIDEO_FORMAT_Y212_LE to DXGI_FORMAT_Y216,
GST_VIDEO_FORMAT_Y412_LE to DXGI_FORMAT_416
---
 .../gst-libs/gst/d3d11/gstd3d11-private.h          |  6 ++++++
 .../gst-libs/gst/d3d11/gstd3d11device.cpp          | 14 +++-----------
 .../gst-libs/gst/d3d11/gstd3d11format.cpp          |  2 ++
 3 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11-private.h b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11-private.h
index 35182500e917..93de25fb5146 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11-private.h
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11-private.h
@@ -130,6 +130,12 @@ static const GstD3D11Format _gst_d3d11_default_format_map[] = {
       D3D11_FORMAT_SUPPORT_SHADER_SAMPLE),
   MAKE_FORMAT_MAP_YUV_FULL (YUY2, YUY2, R8G8B8A8_UNORM, UNKNOWN, UNKNOWN, UNKNOWN,
       D3D11_FORMAT_SUPPORT_SHADER_SAMPLE),
+  MAKE_FORMAT_MAP_YUV_FULL (Y210, Y210, R16G16B16A16_UNORM, UNKNOWN, UNKNOWN, UNKNOWN,
+      D3D11_FORMAT_SUPPORT_SHADER_SAMPLE),
+  MAKE_FORMAT_MAP_YUV_FULL (Y412_LE, Y416, R16G16B16A16_UNORM, UNKNOWN, UNKNOWN, UNKNOWN,
+      D3D11_FORMAT_SUPPORT_SHADER_SAMPLE),
+  MAKE_FORMAT_MAP_YUV_FULL (Y212_LE, Y216, R16G16B16A16_UNORM, UNKNOWN, UNKNOWN, UNKNOWN,
+      D3D11_FORMAT_SUPPORT_SHADER_SAMPLE),
   MAKE_FORMAT_MAP_RGBP (RGBP, R8_UNORM, UNKNOWN),
   MAKE_FORMAT_MAP_RGBP (BGRP, R8_UNORM, UNKNOWN),
   MAKE_FORMAT_MAP_RGBP (GBR, R8_UNORM, UNKNOWN),
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11device.cpp b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11device.cpp
index 2a5c77b9dfa5..c5c6e004b457 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11device.cpp
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11device.cpp
@@ -505,11 +505,14 @@ gst_d3d11_device_setup_format_table (GstD3D11Device * self)
         break;
         /* YUV DXGI native formats */
       case GST_VIDEO_FORMAT_VUYA:
+      case GST_VIDEO_FORMAT_Y210:
       case GST_VIDEO_FORMAT_Y410:
       case GST_VIDEO_FORMAT_NV12:
       case GST_VIDEO_FORMAT_P010_10LE:
       case GST_VIDEO_FORMAT_P012_LE:
       case GST_VIDEO_FORMAT_P016_LE:
+      case GST_VIDEO_FORMAT_Y212_LE:
+      case GST_VIDEO_FORMAT_Y412_LE:
       case GST_VIDEO_FORMAT_YUY2:
       {
         gboolean supported = TRUE;
@@ -652,17 +655,6 @@ gst_d3d11_device_setup_format_table (GstD3D11Device * self)
   priv->format_table[n_formats].resource_format[0] =
       DXGI_FORMAT_R8G8_B8G8_UNORM;
   n_formats++;
-
-  /* Y210 and Y410 formats cannot support rtv */
-  priv->format_table[n_formats].format = GST_VIDEO_FORMAT_Y210;
-  priv->format_table[n_formats].resource_format[0] =
-      DXGI_FORMAT_R16G16B16A16_UNORM;
-  if (can_support_format (self, DXGI_FORMAT_Y210,
-          D3D11_FORMAT_SUPPORT_SHADER_SAMPLE))
-    priv->format_table[n_formats].dxgi_format = DXGI_FORMAT_Y210;
-  else
-    priv->format_table[n_formats].dxgi_format = DXGI_FORMAT_UNKNOWN;
-  n_formats++;
 #endif
 }
 
diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11format.cpp b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11format.cpp
index af6ee93c7894..899e19695ea7 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11format.cpp
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/d3d11/gstd3d11format.cpp
@@ -152,6 +152,8 @@ gst_d3d11_dxgi_format_get_size (DXGI_FORMAT format, guint width, guint height,
     case DXGI_FORMAT_R8G8_B8G8_UNORM:
     case DXGI_FORMAT_Y210:
     case DXGI_FORMAT_Y410:
+    case DXGI_FORMAT_Y216:
+    case DXGI_FORMAT_Y416:
     case DXGI_FORMAT_R16G16B16A16_UNORM:
       offset[0] = 0;
       stride[0] = pitch;
-- 
2.38.1

