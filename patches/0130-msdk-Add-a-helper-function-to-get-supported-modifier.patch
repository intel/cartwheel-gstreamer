From 0f626a17565efbfc0b0215d6c6a34c0373debb6d Mon Sep 17 00:00:00 2001
From: Yinhang Liu <yinhang.liu@intel.com>
Date: Thu, 18 May 2023 14:36:23 +0800
Subject: [PATCH 130/139] msdk: Add a helper function to get supported
 modifiers

The modifiers will be used when creating caps for dma feature.

co-authored-by: Mengkejiergeli Ba <mengkejiergeli.ba@intel.com>
---
 .../sys/msdk/gstmsdkallocator_libva.c         | 74 +++++++++++++++++++
 .../sys/msdk/gstmsdkallocator_libva.h         |  4 +
 2 files changed, 78 insertions(+)

diff --git a/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.c b/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.c
index b2ab8bf6d1..34c05d18de 100644
--- a/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.c
+++ b/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.c
@@ -32,6 +32,7 @@
 
 #include <va/va.h>
 #include <va/va_drmcommon.h>
+#include <libdrm/drm_fourcc.h>
 #include <unistd.h>
 #include "gstmsdkallocator.h"
 #include "gstmsdkallocator_libva.h"
@@ -776,3 +777,76 @@ error_destroy_va_surface:
     return FALSE;
   }
 }
+
+static guint
+_get_usage_hint (GstMsdkContextJobType job_type)
+{
+  guint hint = VA_SURFACE_ATTRIB_USAGE_HINT_GENERIC;
+
+  switch (job_type) {
+    case GST_MSDK_JOB_DECODER:
+      hint |= VA_SURFACE_ATTRIB_USAGE_HINT_DECODER;
+      break;
+    case GST_MSDK_JOB_ENCODER:
+      hint |= VA_SURFACE_ATTRIB_USAGE_HINT_ENCODER;
+      break;
+    case GST_MSDK_JOB_VPP:
+      hint |= VA_SURFACE_ATTRIB_USAGE_HINT_VPP_READ |
+          VA_SURFACE_ATTRIB_USAGE_HINT_VPP_WRITE;
+      break;
+    default:
+      GST_WARNING ("Unsupported job type %d", job_type);
+      break;
+  }
+
+  return hint;
+}
+
+gboolean
+gst_msdk_get_supported_modifiers (GstMsdkContext * context,
+    GstMsdkContextJobType job_type, GstVideoFormat format, GValue * modifiers)
+{
+  guint64 mod = DRM_FORMAT_MOD_INVALID;
+  guint64 mod_gen = DRM_FORMAT_MOD_INVALID;
+  GValue gmod = G_VALUE_INIT;
+  guint usage_hint = VA_SURFACE_ATTRIB_USAGE_HINT_GENERIC;
+  GstVaDisplay *display =
+      (GstVaDisplay *) gst_msdk_context_get_va_display (context);
+
+  g_return_val_if_fail (context != NULL, FALSE);
+  g_return_val_if_fail (format != GST_VIDEO_FORMAT_UNKNOWN, FALSE);
+  g_return_val_if_fail (modifiers != NULL, FALSE);
+
+  g_value_init (&gmod, G_TYPE_UINT64);
+  usage_hint = _get_usage_hint (job_type);
+
+  mod = gst_va_dmabuf_get_modifier_for_format (display, format, usage_hint);
+  if (mod != DRM_FORMAT_MOD_INVALID && mod != DRM_FORMAT_MOD_LINEAR) {
+    g_value_set_uint64 (&gmod, mod);
+    gst_value_list_append_value (modifiers, &gmod);
+  }
+
+  if (usage_hint != VA_SURFACE_ATTRIB_USAGE_HINT_GENERIC) {
+    mod_gen =
+        gst_va_dmabuf_get_modifier_for_format (display, format, usage_hint);
+    if (mod_gen != mod && mod_gen != DRM_FORMAT_MOD_INVALID &&
+        mod_gen != DRM_FORMAT_MOD_LINEAR) {
+      g_value_set_uint64 (&gmod, mod_gen);
+      gst_value_list_append_value (modifiers, &gmod);
+    }
+  }
+
+  if (mod == DRM_FORMAT_MOD_LINEAR || mod_gen == DRM_FORMAT_MOD_LINEAR) {
+    g_value_set_uint64 (&gmod, DRM_FORMAT_MOD_LINEAR);
+    gst_value_list_append_value (modifiers, &gmod);
+  }
+
+  if (mod == DRM_FORMAT_MOD_INVALID && mod_gen == DRM_FORMAT_MOD_INVALID) {
+    GST_WARNING ("Failed to get modifier %s:0x%016llx",
+        gst_video_format_to_string (format), DRM_FORMAT_MOD_INVALID);
+  }
+
+  g_value_unset (&gmod);
+
+  return (gst_value_list_get_size (modifiers) == 0) ? FALSE : TRUE;
+}
diff --git a/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.h b/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.h
index da2f4d3bfe..95d7b6766f 100644
--- a/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.h
+++ b/subprojects/gst-plugins-bad/sys/msdk/gstmsdkallocator_libva.h
@@ -49,6 +49,10 @@ gboolean
 gst_msdk_replace_mfx_memid (GstMsdkContext *context,
     mfxFrameSurface1 *mfx_surface, VASurfaceID surface_id);
 
+gboolean
+gst_msdk_get_supported_modifiers (GstMsdkContext * context,
+    GstMsdkContextJobType job_type, GstVideoFormat format, GValue * modifiers);
+
 G_END_DECLS
 
 #endif /* GST_MSDK_ALLOCATOR_LIBVA_H_ */
-- 
2.34.1

