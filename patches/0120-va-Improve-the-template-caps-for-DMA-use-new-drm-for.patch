From 77bda7874d53a14371c5ce00c3562f2cf09dbf54 Mon Sep 17 00:00:00 2001
From: He Junyan <junyan.he@intel.com>
Date: Wed, 22 Feb 2023 18:53:32 +0800
Subject: [PATCH 120/124] va: Improve the template caps for DMA, use new
 drm-format kind caps

We should add the modifier information for each surface format when
we report the template caps.
---
 .../gst-libs/gst/va/gstvapool.c               |   2 +-
 .../gst-plugins-bad/sys/va/gstvacaps.c        | 125 +++++++++++++++++-
 .../gst-plugins-bad/sys/va/gstvacaps.h        |  10 +-
 .../gst-plugins-bad/sys/va/gstvadecoder.c     |   2 +-
 .../gst-plugins-bad/sys/va/gstvaencoder.c     |   2 +-
 .../gst-plugins-bad/sys/va/gstvafilter.c      |   9 +-
 6 files changed, 136 insertions(+), 14 deletions(-)

diff --git a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
index 07817a539d..ade406eb10 100644
--- a/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
+++ b/subprojects/gst-plugins-bad/gst-libs/gst/va/gstvapool.c
@@ -153,7 +153,7 @@ gst_va_pool_set_config (GstBufferPool * pool, GstStructure * config)
     if (!gst_video_info_dma_drm_from_caps (&vpool->caps_info_drm, caps))
       goto wrong_caps;
 
-    if (!gst_va_dma_info_to_video_info (&vpool->caps_info_drm, &info))
+    if (!gst_va_dma_drm_info_to_video_info (&vpool->caps_info_drm, &info))
       goto wrong_caps;
 
     vpool->caps_info_drm.vinfo = info;
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvacaps.c b/subprojects/gst-plugins-bad/sys/va/gstvacaps.c
index 0c91822b2a..f17dbf5fbc 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvacaps.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvacaps.c
@@ -30,6 +30,14 @@
 #include "gstvadisplay_priv.h"
 #include "gstvaprofile.h"
 
+#ifndef G_OS_WIN32
+#include <libdrm/drm_fourcc.h>
+#else
+#define DRM_FORMAT_INVALID     0
+#define DRM_FORMAT_MOD_LINEAR  0ULL
+#define DRM_FORMAT_MOD_INVALID 0xffffffffffffff
+#endif
+
 GST_DEBUG_CATEGORY_EXTERN (gstva_debug);
 #define GST_CAT_DEFAULT gstva_debug
 
@@ -145,6 +153,38 @@ gst_caps_set_format_array (GstCaps * caps, GArray * formats)
   return TRUE;
 }
 
+static gboolean
+gst_caps_set_drm_format_array (GstCaps * caps, GPtrArray * formats)
+{
+  GValue v_formats = G_VALUE_INIT;
+  const gchar *format;
+  guint i;
+
+  g_return_val_if_fail (GST_IS_CAPS (caps), FALSE);
+  g_return_val_if_fail (formats, FALSE);
+
+  if (formats->len == 1) {
+    format = g_ptr_array_index (formats, 0);
+    g_value_init (&v_formats, G_TYPE_STRING);
+    g_value_set_string (&v_formats, format);
+  } else if (formats->len > 1) {
+
+    gst_value_list_init (&v_formats, formats->len);
+
+    for (i = 0; i < formats->len; i++) {
+      format = g_ptr_array_index (formats, i);
+      _value_list_append_string (&v_formats, format);
+    }
+  } else {
+    return FALSE;
+  }
+
+  gst_caps_set_value (caps, "drm-format", &v_formats);
+  g_value_unset (&v_formats);
+
+  return TRUE;
+}
+
 /* Fix raw frames ill reported by drivers.
  *
  * Mesa Gallium reports P010 and P016 for H264 encoder:
@@ -191,7 +231,80 @@ fix_raw_formats (GstVaDisplay * display, VAConfigID config, GArray * formats)
 }
 
 GstCaps *
-gst_va_create_raw_caps_from_config (GstVaDisplay * display, VAConfigID config)
+gst_va_create_dma_caps (GstVaDisplay * display, VAEntrypoint entrypoint,
+    GArray * formats, gint min_width, gint max_width,
+    gint min_height, gint max_height)
+{
+  guint usage_hint;
+  guint64 modifier;
+  guint32 fourcc;
+  GstVideoFormat fmt;
+  gchar *drm_fmt_str;
+  GPtrArray *drm_formats_str;
+  GstCaps *caps = NULL;
+  guint i;
+
+  switch (entrypoint) {
+    case VAEntrypointVLD:
+      usage_hint = VA_SURFACE_ATTRIB_USAGE_HINT_DECODER;
+      break;
+    case VAEntrypointEncSlice:
+    case VAEntrypointEncSliceLP:
+    case VAEntrypointEncPicture:
+      usage_hint = VA_SURFACE_ATTRIB_USAGE_HINT_ENCODER;
+      break;
+    case VAEntrypointVideoProc:
+      usage_hint = VA_SURFACE_ATTRIB_USAGE_HINT_VPP_READ |
+          VA_SURFACE_ATTRIB_USAGE_HINT_VPP_WRITE;
+      break;
+    default:
+      GST_WARNING ("Not commonly used entrypoint %d,"
+          " just use generic usage hint", entrypoint);
+      usage_hint = VA_SURFACE_ATTRIB_USAGE_HINT_GENERIC;
+      break;
+  }
+
+  drm_formats_str = g_ptr_array_new_with_free_func (g_free);
+
+  for (i = 0; i < formats->len; i++) {
+    fmt = g_array_index (formats, GstVideoFormat, i);
+
+    fourcc = gst_va_drm_fourcc_from_video_format (fmt);
+    if (fourcc == DRM_FORMAT_INVALID)
+      continue;
+
+    modifier = gst_va_dmabuf_get_modifier_for_format (display, fmt, usage_hint);
+    if (modifier == DRM_FORMAT_MOD_INVALID)
+      continue;
+
+    drm_fmt_str = gst_video_dma_drm_fourcc_to_string (fourcc, modifier);
+
+    g_ptr_array_add (drm_formats_str, drm_fmt_str);
+  }
+
+  if (drm_formats_str->len == 0)
+    goto out;
+
+  caps = gst_caps_new_simple ("video/x-raw", "width", GST_TYPE_INT_RANGE,
+      min_width, max_width, "height", GST_TYPE_INT_RANGE, min_height,
+      max_height, NULL);
+
+  gst_caps_set_features_simple (caps,
+      gst_caps_features_from_string (GST_CAPS_FEATURE_MEMORY_DMABUF));
+
+  if (!gst_caps_set_drm_format_array (caps, drm_formats_str)) {
+    gst_clear_caps (&caps);
+    goto out;
+  }
+
+out:
+  g_ptr_array_unref (drm_formats_str);
+  return caps;
+}
+
+GstCaps *
+gst_va_create_raw_caps_from_config (GstVaDisplay * display, VAConfigID config,
+    VAEntrypoint entrypoint)
 {
   GArray *formats;
   GstCaps *caps = NULL, *base_caps, *feature_caps;
@@ -263,10 +376,10 @@ gst_va_create_raw_caps_from_config (GstVaDisplay * display, VAConfigID config)
   }
   if (mem_type & VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME
       || mem_type & VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME_2) {
-    feature_caps = gst_caps_copy (base_caps);
-    features = gst_caps_features_from_string (GST_CAPS_FEATURE_MEMORY_DMABUF);
-    gst_caps_set_features_simple (feature_caps, features);
-    caps = gst_caps_merge (caps, feature_caps);
+    feature_caps = gst_va_create_dma_caps (display, entrypoint, formats,
+        min_width, max_width, min_height, max_height);
+    if (feature_caps)
+      caps = gst_caps_merge (caps, feature_caps);
   }
 
   /* raw caps */
@@ -302,7 +415,7 @@ gst_va_create_raw_caps (GstVaDisplay * display, VAProfile profile,
     return NULL;
   }
 
-  caps = gst_va_create_raw_caps_from_config (display, config);
+  caps = gst_va_create_raw_caps_from_config (display, config, entrypoint);
 
   status = vaDestroyConfig (dpy, config);
   if (status != VA_STATUS_SUCCESS) {
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvacaps.h b/subprojects/gst-plugins-bad/sys/va/gstvacaps.h
index 2ef8691b43..85ea926777 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvacaps.h
+++ b/subprojects/gst-plugins-bad/sys/va/gstvacaps.h
@@ -35,8 +35,16 @@ VASurfaceAttrib *     gst_va_get_surface_attribs          (GstVaDisplay * displa
                                                            VAConfigID config,
                                                            guint * attrib_count);
 
+GstCaps *             gst_va_create_dma_caps              (GstVaDisplay * display,
+                                                           VAEntrypoint entrypoint,
+                                                           GArray * formats,
+                                                           gint min_width,
+                                                           gint max_width,
+                                                           gint min_height,
+                                                           gint max_height);
 GstCaps *             gst_va_create_raw_caps_from_config  (GstVaDisplay * display,
-                                                           VAConfigID config);
+                                                           VAConfigID config,
+                                                           VAEntrypoint entrypoint);
 GstCaps *             gst_va_create_coded_caps            (GstVaDisplay * display,
                                                            VAProfile profile,
                                                            VAEntrypoint entrypoint,
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvadecoder.c b/subprojects/gst-plugins-bad/sys/va/gstvadecoder.c
index 8935178018..8143035988 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvadecoder.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvadecoder.c
@@ -415,7 +415,7 @@ gst_va_decoder_get_srcpad_caps (GstVaDecoder * self)
 
   if (gst_va_decoder_is_open (self)) {
     srcpad_caps = gst_va_create_raw_caps_from_config (self->display,
-        self->config);
+        self->config, VAEntrypointVLD);
     if (!srcpad_caps) {
       GST_WARNING_OBJECT (self, "Invalid configuration caps");
       return NULL;
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvaencoder.c b/subprojects/gst-plugins-bad/sys/va/gstvaencoder.c
index d1e8ed1d0e..eb1214fdca 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvaencoder.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvaencoder.c
@@ -993,7 +993,7 @@ gst_va_encoder_get_sinkpad_caps (GstVaEncoder * self)
 
   if (gst_va_encoder_is_open (self)) {
     sinkpad_caps = gst_va_create_raw_caps_from_config (self->display,
-        self->config);
+        self->config, self->entrypoint);
     if (!sinkpad_caps) {
       GST_WARNING_OBJECT (self, "Invalid configuration caps");
       return NULL;
diff --git a/subprojects/gst-plugins-bad/sys/va/gstvafilter.c b/subprojects/gst-plugins-bad/sys/va/gstvafilter.c
index 92ab0e3dfe..98e433887c 100644
--- a/subprojects/gst-plugins-bad/sys/va/gstvafilter.c
+++ b/subprojects/gst-plugins-bad/sys/va/gstvafilter.c
@@ -1071,10 +1071,11 @@ gst_va_filter_get_caps (GstVaFilter * self)
   }
   if (mem_types & VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME
       || mem_types & VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME_2) {
-    feature_caps = gst_caps_copy (base_caps);
-    features = gst_caps_features_from_string (GST_CAPS_FEATURE_MEMORY_DMABUF);
-    gst_caps_set_features_simple (feature_caps, features);
-    caps = gst_caps_merge (caps, feature_caps);
+    feature_caps = gst_va_create_dma_caps (self->display,
+        VAEntrypointVideoProc, surface_formats,
+        self->min_width, self->max_width, self->min_height, self->max_height);
+    if (feature_caps)
+      caps = gst_caps_merge (caps, feature_caps);
   }
 
   gst_caps_unref (base_caps);
-- 
2.34.1

